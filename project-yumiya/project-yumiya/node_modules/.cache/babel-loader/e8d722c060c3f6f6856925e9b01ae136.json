{"ast":null,"code":"import _classCallCheck from \"C:\\\\Github\\\\ProjectYumiya\\\\project-yumiya\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Github\\\\ProjectYumiya\\\\project-yumiya\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Github\\\\ProjectYumiya\\\\project-yumiya\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Github\\\\ProjectYumiya\\\\project-yumiya\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Github\\\\ProjectYumiya\\\\project-yumiya\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Github\\\\ProjectYumiya\\\\project-yumiya\\\\project-yumiya\\\\src\\\\Component\\\\DailyCard\\\\DailyCard.jsx\";\nimport React, { Component } from 'react';\nimport ItemTitle from \"../ItemTitle.jsx\";\nimport CalendarItem from \"./CalendarItem.jsx\";\nimport { listUpcomingEvents } from \"./updateEvent.js\";\nimport './DailyCard.css';\nimport '../ButtonSet/button.css';\n\nvar DailyCard = /*#__PURE__*/function (_Component) {\n  _inherits(DailyCard, _Component);\n\n  function DailyCard(props) {\n    var _this;\n\n    _classCallCheck(this, DailyCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DailyCard).call(this, props));\n    _this.styles = {\n      height: \"94%\",\n      width: \"60%\",\n      backgroundColor: \"rgba(20, 20, 20, 0.77)\",\n      border: \"solid 2px #262524\",\n      padding: \"10px\",\n      minWidth: \"189px\",\n      borderRadius: \"10px\"\n    };\n    _this.flexBoxStyle = {\n      position: \"relative\",\n      height: \"calc(90% - 60px)\",\n      width: \"calc(100%-20px)\",\n      overflow: \"auto\",\n      borderTopLeftRadius: \"30px\",\n      borderBottomLeftRadius: \"30px\"\n    };\n    _this.title = {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginBottom: \"30px\",\n      marginTop: \"30px\"\n    };\n\n    _this.eventModifyAdd = function () {\n      document.getElementById(\"addEvent\").style.visibility = \"visible\";\n    };\n\n    _this.eventModifySub = function () {\n      /* global gapi */\n      var a = Array.from(_this.state.selectedEvents); //Perform delete on every event that is selected\n\n      for (var i = 0; i < a.length; i++) {\n        console.log(a[i]);\n        var request = gapi.client.calendar.events.delete({\n          'calendarId': 'primary',\n          'eventId': a[i]\n        });\n        request.execute(function (response) {\n          if (response.error || response === false) {\n            alert(\"Failed to delete one or more events\");\n          }\n        });\n      }\n\n      ; //Reset selected events to 0\n\n      _this.setState({\n        selectedEvents: new Set()\n      });\n    };\n\n    _this.handleUserSelection = function (selected, status) {\n      if (!status) _this.state.selectedEvents.add(selected); // console.log(\"add\")\n      else _this.state.selectedEvents.delete(selected); // console.log(\"sub\")\n      // this.setState({selectedEvents: new Set(this.state.selectedEvents)})\n    };\n\n    _this.state = {\n      selectedEvents: new Set(),\n      eventList: {}\n    };\n    return _this;\n  }\n\n  _createClass(DailyCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // const d = new Date();\n      // let cardTitle = \"Today \" + (d.getMonth() + 1) + \" | \" + d.getDate();\n      var cardTitle = \"Upcoming events\";\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: this.styles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: this.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ItemTitle, {\n        color: \"#03d3fc\",\n        text: cardTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"../ButtonSet/subButton.png\"),\n        alt: \"sub button\",\n        style: {\n          marginLeft: \"auto\",\n          marginRight: \"10px\",\n          scale: \"0.5\"\n        },\n        onClick: this.eventModifySub,\n        className: \"AddSubButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"../ButtonSet/addButton.png\"),\n        alt: \"add button\",\n        style: {\n          scale: \"0.5\"\n        },\n        onClick: this.eventModifyAdd,\n        className: \"AddSubButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: this.flexBoxStyle,\n        className: \"flexBoxStyle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, !JSON.parse(window.localStorage.getItem(\"eventList\")) || JSON.parse(window.localStorage.getItem(\"eventList\")).map(function (event) {\n        return /*#__PURE__*/React.createElement(CalendarItem, {\n          key: event.id,\n          name: event.name,\n          date: event.date,\n          time: event.dateTime,\n          location: event.location,\n          description: event.description,\n          id: event.id,\n          parentCallback: _this2.handleUserSelection,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 43\n          }\n        });\n      })));\n    } //This funciton is for updating the calendar automatically every 1s\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      setInterval(function () {\n        try {\n          listUpcomingEvents();\n        } catch (_unused) {\n          console.log(\"Not logged in\");\n        }\n\n        _this3.forceUpdate();\n      }, 1000);\n    }\n  }]);\n\n  return DailyCard;\n}(Component);\n\nexport default DailyCard;","map":{"version":3,"names":["React","Component","ItemTitle","CalendarItem","listUpcomingEvents","DailyCard","props","styles","height","width","backgroundColor","border","padding","minWidth","borderRadius","flexBoxStyle","position","overflow","borderTopLeftRadius","borderBottomLeftRadius","title","display","flexDirection","alignItems","justifyContent","marginBottom","marginTop","eventModifyAdd","document","getElementById","style","visibility","eventModifySub","a","Array","from","state","selectedEvents","i","length","console","log","request","gapi","client","calendar","events","delete","execute","response","error","alert","setState","Set","handleUserSelection","selected","status","add","eventList","cardTitle","require","marginLeft","marginRight","scale","JSON","parse","window","localStorage","getItem","map","event","id","name","date","dateTime","location","description","setInterval","forceUpdate"],"sources":["C:/Github/ProjectYumiya/project-yumiya/project-yumiya/src/Component/DailyCard/DailyCard.jsx"],"sourcesContent":["import React, {Component} from 'react'\r\nimport ItemTitle from \"../ItemTitle.jsx\"\r\nimport CalendarItem from \"./CalendarItem.jsx\"\r\nimport {listUpcomingEvents} from \"./updateEvent.js\"\r\nimport './DailyCard.css'\r\nimport '../ButtonSet/button.css'\r\n\r\nclass DailyCard extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            selectedEvents: new Set(),\r\n            eventList: {}\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    styles = {\r\n        height: \"94%\",\r\n        width: \"60%\",\r\n        backgroundColor: \"rgba(20, 20, 20, 0.77)\",\r\n        border: \"solid 2px #262524\",\r\n        padding: \"10px\",\r\n        minWidth: \"189px\",\r\n        borderRadius: \"10px\"\r\n    }\r\n\r\n    flexBoxStyle = {\r\n        position: \"relative\",\r\n        height: \"calc(90% - 60px)\",\r\n        width: \"calc(100%-20px)\",\r\n        overflow: \"auto\",\r\n        borderTopLeftRadius: \"30px\",\r\n        borderBottomLeftRadius: \"30px\",\r\n    }\r\n\r\n    title = {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent:\"center\",\r\n        marginBottom: \"30px\",\r\n        marginTop: \"30px\"\r\n    }\r\n\r\n    eventModifyAdd = () => {\r\n        document.getElementById(\"addEvent\").style.visibility = \"visible\"\r\n    }\r\n\r\n    eventModifySub = () => {\r\n        /* global gapi */\r\n        let a = Array.from(this.state.selectedEvents)\r\n        //Perform delete on every event that is selected\r\n        for(let i = 0; i < a.length; i++){\r\n            console.log(a[i]);\r\n            var request = gapi.client.calendar.events.delete({\r\n                'calendarId': 'primary',\r\n                'eventId': a[i]\r\n            });\r\n            request.execute(function(response) {\r\n                if(response.error || response === false){\r\n                    alert(\"Failed to delete one or more events\")\r\n                }\r\n            });\r\n        };\r\n        \r\n        //Reset selected events to 0\r\n        this.setState({selectedEvents: new Set()});\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        // const d = new Date();\r\n        // let cardTitle = \"Today \" + (d.getMonth() + 1) + \" | \" + d.getDate();\r\n        let cardTitle = \"Upcoming events\";\r\n        return(\r\n            <div style = {this.styles}>\r\n                <div style = {this.title}>\r\n                    <ItemTitle color=\"#03d3fc\" text= {cardTitle}/>\r\n                    <img src={require(\"../ButtonSet/subButton.png\")} alt=\"sub button\"  \r\n                            style={{marginLeft:\"auto\", marginRight:\"10px\",scale: \"0.5\"}}\r\n                            onClick={this.eventModifySub}\r\n                            className = \"AddSubButton\"/>\r\n                    <img src={require(\"../ButtonSet/addButton.png\")} alt=\"add button\" \r\n                            style={{scale: \"0.5\"}} \r\n                            onClick={this.eventModifyAdd}\r\n                            className = \"AddSubButton\"/>\r\n                </div>\r\n\r\n                <div style = {this.flexBoxStyle} className=\"flexBoxStyle\">\r\n                    {/* This will keep updating if there promise is not resolved (called at ../../public/index.js when\r\n                    user log in) */}\r\n                    {   !JSON.parse(window.localStorage.getItem(\"eventList\")) ||\r\n                        JSON.parse(window.localStorage.getItem(\"eventList\"))   \r\n                            .map(event => <CalendarItem \r\n                                key={event.id} \r\n                                name={event.name}\r\n                                date={event.date}\r\n                                time={event.dateTime}\r\n                                location={event.location}\r\n                                description={event.description}\r\n                                id={event.id}\r\n                                parentCallback = {this.handleUserSelection}\r\n                                />)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //This funciton is for updating the calendar automatically every 1s\r\n    componentDidMount(){\r\n        setInterval(() => {\r\n            try{\r\n                listUpcomingEvents()\r\n            } catch {\r\n                console.log(\"Not logged in\")\r\n            }\r\n            this.forceUpdate()\r\n        },1000)\r\n    }\r\n    handleUserSelection = (selected, status) => {\r\n        if(!status)\r\n            this.state.selectedEvents.add(selected)\r\n            // console.log(\"add\")\r\n        else\r\n            this.state.selectedEvents.delete(selected)\r\n            // console.log(\"sub\")\r\n        // this.setState({selectedEvents: new Set(this.state.selectedEvents)})\r\n    }\r\n}\r\n\r\nexport default DailyCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}