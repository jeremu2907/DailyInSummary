{"ast":null,"code":"import _slicedToArray from \"C:\\\\Github\\\\ProjectYumiya\\\\project-yumiya\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Github\\\\ProjectYumiya\\\\project-yumiya\\\\project-yumiya\\\\src\\\\Component\\\\NewEvent.jsx\";\nimport React, { useState } from 'react';\nimport ItemTitlte from './ItemTitle';\nimport '../App.css';\nimport './NewEvent.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"; //Function will be called everytime user create new event\n//Used to add local GMT to fit api time format\n\nfunction appendTimeZone() {\n  var offset = new Date().getTimezoneOffset();\n  offset = offset / 60;\n  var append = \"\";\n\n  if (offset > 0) {\n    append += '-';\n  } else {\n    append += \"+\";\n  }\n\n  offset = Math.abs(offset);\n\n  if (Math.log10(offset) < 1) {\n    append += \"0\";\n  }\n\n  append += offset + \":00\";\n  return append;\n}\n\nexport function NewEvent() {\n  var styles = {\n    position: \"fixed\",\n    height: \"auto\",\n    width: \"auto\",\n    backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    padding: \"30px\",\n    fontSize: \"24px\",\n    borderRadius: \"30px\"\n  }; // function to put all details to localStorage to be included in http request\n\n  var setEventInfo = function setEventInfo() {\n    /* global gapi*/\n    var name = document.getElementsByName(\"createEventName\")[0].value;\n    var dateTime = document.getElementsByName(\"createEventDateTime\")[0].value;\n    var location = document.getElementsByName(\"createEventLocation\")[0].value;\n    var notes = document.getElementsByName(\"createEventNotes\")[0].value; //Time formatting///////////////////////////////////////////////////\n    //Format reference \tyyyy-mm-ddTHH:mm:ss+00:00\n\n    dateTime = dateTime.replace(\"  \", \"T\"); //add the current timezone to dateTime string ex: -05:00\n\n    dateTime += appendTimeZone();\n    var dateTimeEnd = (parseInt(dateTime.substr(11, 2)) + 1) % 24; //If end date is a new day, add day\n\n    var temp = dateTime;\n\n    if (dateTimeEnd === 0) {\n      temp = dateTime.substr(0, 8) + (parseInt(dateTime.substr(8, 2)) + 1) % 31 + dateTime.substr(10, 15);\n    }\n\n    if (Math.log10(dateTimeEnd) < 1) dateTimeEnd = '0' + dateTimeEnd; // console.log(dateTime)\n    // console.log(dateTimeEnd)\n\n    dateTimeEnd = temp.substr(0, 11) + dateTimeEnd + temp.substr(13, 12); // console.log(dateTimeEnd)\n\n    var event = {\n      'summary': name,\n      'location': location,\n      'description': notes,\n      'start': {\n        'dateTime': dateTime\n      },\n      'end': {\n        'dateTime': dateTimeEnd\n      }\n    };\n    var request = gapi.client.calendar.events.insert({\n      'calendarId': 'primary',\n      'resource': event\n    });\n    request.execute(function (event) {\n      if (event.error || event === false) {\n        alert(\"Failed to add event\");\n      }\n    }); //Close NewEvent componenet\n\n    document.getElementById(\"addEvent\").style.visibility = \"hidden\";\n  };\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      startDate = _useState2[0],\n      setStartDate = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles,\n    className: \"globalFont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ItemTitlte, {\n    color: \"#01b1da\",\n    text: \"Create New Event\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"createEventName\",\n    type: \"text\",\n    className: \"newEventBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Date and Time\"), /*#__PURE__*/React.createElement(DatePicker, {\n    dateFormat: \"yyyy-MM-dd'  'HH:mm:ss\",\n    className: \"newEventBox\",\n    name: \"createEventDateTime\",\n    style: {\n      border: \"0\",\n      width: \"auto\"\n    },\n    selected: startDate,\n    onChange: function onChange(date) {\n      return setStartDate(date);\n    },\n    showTimeSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"createEventLocation\",\n    type: \"text\",\n    className: \"newEventBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"createEventNotes\",\n    style: {\n      height: \"200px\"\n    },\n    className: \"newEventBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: \"space-evenly\",\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: setEventInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"Add Event\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      document.getElementById(\"addEvent\").style.visibility = \"hidden\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, \"Cancel\")));\n}","map":{"version":3,"names":["React","useState","ItemTitlte","DatePicker","appendTimeZone","offset","Date","getTimezoneOffset","append","Math","abs","log10","NewEvent","styles","position","height","width","backgroundColor","top","left","transform","display","flexDirection","justifyContent","padding","fontSize","borderRadius","setEventInfo","name","document","getElementsByName","value","dateTime","location","notes","replace","dateTimeEnd","parseInt","substr","temp","event","request","gapi","client","calendar","events","insert","execute","error","alert","getElementById","style","visibility","startDate","setStartDate","border","date","marginTop"],"sources":["C:/Github/ProjectYumiya/project-yumiya/project-yumiya/src/Component/NewEvent.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport ItemTitlte from './ItemTitle'\r\nimport '../App.css'\r\nimport './NewEvent.css'\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n//Function will be called everytime user create new event\r\n//Used to add local GMT to fit api time format\r\nfunction appendTimeZone(){\r\n  let offset = new Date().getTimezoneOffset()\r\n  offset = offset / 60\r\n  let append = \"\"\r\n  if(offset > 0){\r\n    append += '-'\r\n  }\r\n  else{\r\n    append += \"+\"\r\n  }\r\n  offset = Math.abs(offset)\r\n  if(Math.log10(offset) < 1){\r\n    append += \"0\"\r\n  }\r\n  append += offset + \":00\"\r\n  return append\r\n}\r\n\r\nexport function NewEvent() {\r\n    let styles = { position: \"fixed\",\r\n        height: \"auto\",\r\n        width: \"auto\",\r\n        backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-evenly\",\r\n        padding: \"30px\",\r\n        fontSize: \"24px\",\r\n        borderRadius: \"30px\"\r\n    }\r\n\r\n    // function to put all details to localStorage to be included in http request\r\n    const setEventInfo = () => {\r\n      /* global gapi*/\r\n      let name = document.getElementsByName(\"createEventName\")[0].value\r\n      let dateTime = document.getElementsByName(\"createEventDateTime\")[0].value\r\n      let location = document.getElementsByName(\"createEventLocation\")[0].value\r\n      let notes = document.getElementsByName(\"createEventNotes\")[0].value\r\n\r\n      //Time formatting///////////////////////////////////////////////////\r\n      //Format reference \tyyyy-mm-ddTHH:mm:ss+00:00\r\n      dateTime = dateTime.replace(\"  \",\"T\")\r\n      //add the current timezone to dateTime string ex: -05:00\r\n      dateTime += appendTimeZone();\r\n      let dateTimeEnd = (parseInt(dateTime.substr(11, 2)) + 1) % 24\r\n      //If end date is a new day, add day\r\n      let temp = dateTime\r\n      if(dateTimeEnd === 0){\r\n        temp = dateTime.substr(0,8) + (parseInt(dateTime.substr(8, 2)) + 1) % 31 + dateTime.substr(10,15)\r\n      }\r\n      if(Math.log10(dateTimeEnd) < 1)\r\n      dateTimeEnd = '0' + dateTimeEnd\r\n      // console.log(dateTime)\r\n      // console.log(dateTimeEnd)\r\n      dateTimeEnd = temp.substr(0,11) + dateTimeEnd + temp.substr(13,12)\r\n      // console.log(dateTimeEnd)\r\n\r\n\r\n      var event = {\r\n          'summary': name,\r\n          'location': location,\r\n          'description': notes,\r\n          'start': {\r\n              'dateTime': dateTime,\r\n          },\r\n          'end': {\r\n            'dateTime': dateTimeEnd\r\n          },\r\n        };\r\n        \r\n        var request = gapi.client.calendar.events.insert({\r\n          'calendarId': 'primary',\r\n          'resource': event\r\n        });\r\n        \r\n        request.execute(function(event) {\r\n          if(event.error || event === false){\r\n            alert(\"Failed to add event\")\r\n          }\r\n        });\r\n      \r\n      //Close NewEvent componenet\r\n      document.getElementById(\"addEvent\").style.visibility = \"hidden\"\r\n        \r\n    }\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    return(\r\n            <div style = {styles} className=\"globalFont\">\r\n                <ItemTitlte color=\"#01b1da\" text=\"Create New Event\" />\r\n\r\n                <h5>Name</h5>\r\n                <input name=\"createEventName\" type=\"text\" className = \"newEventBox\"></input>\r\n\r\n                <h5>Date and Time</h5>\r\n                <DatePicker dateFormat = \"yyyy-MM-dd'  'HH:mm:ss\" className = \"newEventBox\" name=\"createEventDateTime\" style = {{border: \"0\", width: \"auto\"}} selected={startDate} onChange={(date) => setStartDate(date)} showTimeSelect/>\r\n                \r\n                <h5>Location</h5>\r\n                <input name=\"createEventLocation\" type=\"text\" className = \"newEventBox\"></input>\r\n                \r\n                <h5>Notes</h5>\r\n                <textarea name=\"createEventNotes\" style = {{height: \"200px\"}} className = \"newEventBox\"></textarea>\r\n                \r\n                <div style={{display: 'flex', flexDirection: 'row', justifyContent: \"space-evenly\", marginTop: \"10px\"}}>\r\n                    <button onClick={setEventInfo}>Add Event</button>\r\n                    <button onClick={() => {document.getElementById(\"addEvent\").style.visibility = \"hidden\"}}>Cancel</button>\r\n                </div>\r\n            </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}